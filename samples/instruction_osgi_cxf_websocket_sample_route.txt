Short instruction for running cxf websocket scenarios 
(osgi_cxf_websocket_sample_jaxrs_service osgi_cxf_websocket_sample_jaxrs_client)

Note that this description uses 
atmosphere/2.2.0
camel/2.13
cxf/3.0.2-SNAPSHOT

1. Download Karaf and set up for the websocket samples.

If you already have your own installation of karaf which has some
features/components deployed that overlap with those listed in this
document, you can skip these deployment steps.

The following describes each step and shows the console output.

First, go to the directory and start karaf and install the required
features of cxf and camel.

feature:repo-add cxf 3.0.2-SNAPSHOT
feature:install cxf cxf-transports-websocket-server cxf-transports-websocket-client

feature:repo-add camel 2.13.1
feature:install camel-blueprint camel-cxf


======================================================================
$ bin/karaf

        __ __                  ____      
       / //_/____ __________ _/ __/      
      / ,<  / __ `/ ___/ __ `/ /_        
     / /| |/ /_/ / /  / /_/ / __/        
    /_/ |_|\__,_/_/   \__,_/_/         

  Apache Karaf (3.0.1)

Hit '<tab>' for a list of available commands
and '[cmd] --help' for help on a specific command.
Hit '<ctrl-d>' or type 'system:shutdown' or 'logout' to shutdown Karaf.

karaf@root()> feature:repo-add cxf 3.0.2-SNAPSHOT
Adding feature url mvn:org.apache.cxf.karaf/apache-cxf/3.0.2-SNAPSHOT/xml/features
karaf@root()> feature:install cxf cxf-transports-websocket-server cxf-transports-websocket-client
Refreshing bundles org.apache.cxf.cxf-rt-transports-websocket (184)
karaf@root()> 
karaf@root()> feature:repo-add camel 2.13.1
Adding feature url mvn:org.apache.camel.karaf/apache-camel/2.13.1/xml/features
karaf@root()> feature:install camel-blueprint camel-cxf
Refreshing bundles org.apache.servicemix.bundles.jaxb-impl (102)
Refreshing bundles org.springframework.context.support (84)
karaf@root()> 
======================================================================
2. Deploy the sample application osgi-camel-websocket-sample-route

Finally, deploy the sample scenario.

install mvn:me.temp.samples/osgi-cxf-websocket-sample-jaxrs-service/0.0.4-SNAPSHOT
install mvn:me.temp.samples/osgi-cxf-websocket-sample-jaxrs-client/0.0.4-SNAPSHOT

Bundle osgi-cxf-websocket-sample-jaxrs-service is a blueprint jaxrs service
bundle that uses the websocket transport. Bundle 
osgi-cxf-websocket-sample-jaxrs-client is a blueprint jaxrs client bundle that
uses camel to periodically invokes the previous jaxrs service using the
websocket transport.

======================================================================
karaf@root()> install mvn:me.temp.samples/osgi-cxf-websocket-sample-jaxrs-service/0.0.4-SNAPSHOT
Bundle ID: 197
karaf@root()> install mvn:me.temp.samples/osgi-cxf-websocket-sample-jaxrs-client/0.0.4-SNAPSHOT
Bundle ID: 198
karaf@root()> start 197 198
karaf@root()> list
START LEVEL 100 , List Threshold: 50
 ID | State  | Lvl | Version        | Name                                                   
---------------------------------------------------------------------------------------------
152 | Active |  80 | 1.1.1          | geronimo-jms_1.1_spec                                  
185 | Active |  80 | 1.8.5          | Asynchronous Http Client                               
186 | Active |  80 | 3.9.1.Final    | The Netty Project                                      
190 | Active |  50 | 2.13.1         | camel-core                                             
191 | Active |  50 | 2.13.1         | camel-karaf-commands                                   
192 | Active |  50 | 2.13.1         | camel-blueprint                                        
194 | Active |  50 | 2.13.1         | camel-spring                                           
195 | Active |  50 | 2.13.1         | camel-cxf-transport                                    
196 | Active |  50 | 2.13.1         | camel-cxf                                              
197 | Active |  80 | 0.0.4.SNAPSHOT | me.temp.samples.osgi-cxf-websocket-sample-jaxrs-service
198 | Active |  80 | 0.0.4.SNAPSHOT | me.temp.samples.osgi-cxf-websocket-sample-jaxrs-client 

BookStore endpoint: ws://localhost:8181/cxf/RestContext/jaxrs_websocket_bookstore_bp
karaf@root()> Getting book with id 123 at address ws://localhost:8181/cxf/RestContext/jaxrs_websocket_bookstore_bp
BookStore response: Book(id = '123', name = 'CXF in Action')

karaf@root()>
======================================================================
4. Invoking the sample scenario osgi-cxf-websocket-sample-jaxrs-service

Then, start your browser that supports websocket (e.g., Safari, Chrome, Firefox)
and open samples/osgi_cxf_websocket_sample_jaxrs_service/src/test/resources/index.html

Click on "Connect"

You will see in the log window:
---------
CONNECTED
---------

Click on "Send" to send the request message
GET /cxf/RestContext/jaxrs_websocket_bookstore_bp/web/bookstore/books/123

You will see in the log window:
----------
SENT
GET /cxf/RestContext/jaxrs_websocket_bookstore_bp/web/bookstore/books/123

RECEIVED
200
Content-Type: application/xml
Date: Thu, 24 Jul 2014 13:23:31 GMT

<?xml version="1.0" encoding="UTF-8" standalone="yes"?><Book><id>123</id><name>CXF in Action</name></Book>

-----------

Try sending different messages

1. Get the booknames
-----------
GET /cxf/RestContext/jaxrs_websocket_bookstore_bp/web/bookstore/booknames
-----------

2. Get the book name by posting its identifier number.
-----------
POST /cxf/RestContext/jaxrs_websocket_bookstore_bp/web/bookstore/booksplain
Content-Type: text/plain

123
-----------

3. Get the number of books being bought (a series of hypothetical numbers 
 being pushed for 5 times)
-----------
GET /cxf/RestContext/jaxrs_websocket_bookstore_bp/web/bookstore/bookbought
-----------
